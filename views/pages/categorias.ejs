<!-- Inclui o header -->
<%- include('../components/header') %>

<div class="container">
  <!-- Breadcrumb de navegação -->
  <nav aria-label="breadcrumb" style="margin-bottom: 1rem;">
    <ol class="breadcrumb">
      <li class="breadcrumb-item">
        <a href="/" class="text-decoration-none">
          <i class="fas fa-home"></i> Dashboard
        </a>
      </li>
      <li class="breadcrumb-item active" aria-current="page">
        <i class="fas fa-tags"></i> Categorias
      </li>
    </ol>
  </nav>
  <!-- Cabeçalho da página -->
  <div class="d-flex justify-content-between align-items-center mb-3">
    <div>
      <h1><i class="fas fa-tags"></i> Gerenciar Categorias</h1>
      <p class="text-muted">Organize suas tarefas com categorias</p>
    </div>
    <div class="d-flex gap-2">
      <a href="/" class="btn btn-outline-secondary">
        <i class="fas fa-arrow-left"></i> Voltar ao Dashboard
      </a>
      <button class="btn btn-primary" onclick="abrirModalCategoria()">
        <i class="fas fa-plus"></i> Nova Categoria
      </button>
    </div>
  </div>

  <!-- Lista de categorias -->
  <div class="card">
    <div class="card-header">
      <h2 class="card-title">Lista de Categorias</h2>
    </div>
    <div class="card-body">
      <div class="table-container">
        <table class="table">
          <thead>
            <tr>
              <th>ID</th>
              <th>Nome</th>
              <th>Quantidade de Tarefas</th>
              <th>Ações</th>
            </tr>
          </thead>
          <tbody id="tabela-categorias">
            <tr>
              <td colspan="4" class="text-center">
                <div class="loading"></div> Carregando categorias...
              </td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>

<!-- Modal para criar/editar categoria -->
<div id="modal-categoria" class="modal">
  <div class="modal-content">
    <div class="modal-header">
      <h3 id="modal-title" class="modal-title">Nova Categoria</h3>
      <button class="modal-close" onclick="fecharModalCategoria()">&times;</button>
    </div>
    <form id="form-categoria" onsubmit="salvarCategoria(event)">
      <div class="modal-body">
        <div class="form-group">
          <label class="form-label">Nome da Categoria *</label>
          <input type="text" id="categoria-nome" class="form-control" required 
                 placeholder="Ex: Trabalho, Pessoal, Estudos...">
        </div>
      </div>
      
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" onclick="fecharModalCategoria()">
          Cancelar
        </button>
        <button type="submit" class="btn btn-primary">
          <i class="fas fa-save"></i> Salvar
        </button>
      </div>
    </form>
  </div>
</div>

<script>
let categorias = [];
let tarefas = [];
let categoriaEditando = null;

// Carregar dados iniciais
document.addEventListener('DOMContentLoaded', function() {
  carregarDados();
});

// Carregar categorias e tarefas
async function carregarDados() {
  try {
    const [categoriasRes, tarefasRes] = await Promise.all([
      fetch('/api/categorias'),
      fetch('/api/tarefas')
    ]);
    
    categorias = await categoriasRes.json();
    tarefas = await tarefasRes.json();
    
    exibirCategorias();
  } catch (error) {
    console.error('Erro ao carregar dados:', error);
    document.getElementById('tabela-categorias').innerHTML = 
      '<tr><td colspan="4" class="text-center">Erro ao carregar categorias</td></tr>';
  }
}

// Exibir categorias na tabela
function exibirCategorias() {
  const tbody = document.getElementById('tabela-categorias');
  
  if (categorias.length === 0) {
    tbody.innerHTML = '<tr><td colspan="4" class="text-center">Nenhuma categoria encontrada</td></tr>';
    return;
  }

  tbody.innerHTML = categorias.map(categoria => {
    const qtdTarefas = tarefas.filter(t => t.categoria_id === categoria.id).length;
    
    return `
      <tr>
        <td>${categoria.id}</td>
        <td>
          <i class="fas fa-tag" style="color: var(--primary-color); margin-right: 0.5rem;"></i>
          ${categoria.nome}
        </td>
        <td>
          <span class="badge badge-info">${qtdTarefas} tarefa${qtdTarefas !== 1 ? 's' : ''}</span>
        </td>
        <td>
          <button class="btn btn-sm btn-secondary" onclick="editarCategoria(${categoria.id})">
            <i class="fas fa-edit"></i>
          </button>
          <button class="btn btn-sm btn-danger" onclick="excluirCategoria(${categoria.id})" 
                  ${qtdTarefas > 0 ? 'disabled title="Não é possível excluir categoria com tarefas"' : ''}>
            <i class="fas fa-trash"></i>
          </button>
        </td>
      </tr>
    `;
  }).join('');
}

// Modal functions
function abrirModalCategoria(categoria = null) {
  categoriaEditando = categoria;
  const modal = document.getElementById('modal-categoria');
  const title = document.getElementById('modal-title');
  
  if (categoria) {
    title.textContent = 'Editar Categoria';
    preencherFormulario(categoria);
  } else {
    title.textContent = 'Nova Categoria';
    limparFormulario();
  }
  
  modal.classList.add('show');
}

function fecharModalCategoria() {
  document.getElementById('modal-categoria').classList.remove('show');
  categoriaEditando = null;
}

function preencherFormulario(categoria) {
  document.getElementById('categoria-nome').value = categoria.nome;
}

function limparFormulario() {
  document.getElementById('form-categoria').reset();
}

// Salvar categoria
async function salvarCategoria(event) {
  event.preventDefault();
  
  const dados = {
    nome: document.getElementById('categoria-nome').value
  };
  
  try {
    let response;
    if (categoriaEditando) {
      response = await fetch(`/api/categorias/${categoriaEditando.id}`, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(dados)
      });
    } else {
      response = await fetch('/api/categorias', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(dados)
      });
    }
    
    if (response.ok) {
      fecharModalCategoria();
      carregarDados();
      alert('Categoria salva com sucesso!');
    } else {
      const error = await response.json();
      throw new Error(error.error || 'Erro ao salvar categoria');
    }
  } catch (error) {
    console.error('Erro:', error);
    alert('Erro ao salvar categoria: ' + error.message);
  }
}

// Editar categoria
function editarCategoria(id) {
  const categoria = categorias.find(c => c.id === id);
  if (categoria) {
    abrirModalCategoria(categoria);
  }
}

// Excluir categoria
async function excluirCategoria(id) {
  const categoria = categorias.find(c => c.id === id);
  const qtdTarefas = tarefas.filter(t => t.categoria_id === id).length;
  
  if (qtdTarefas > 0) {
    alert('Não é possível excluir uma categoria que possui tarefas associadas.');
    return;
  }
  
  if (!confirm(`Tem certeza que deseja excluir a categoria "${categoria.nome}"?`)) return;
  
  try {
    const response = await fetch(`/api/categorias/${id}`, {
      method: 'DELETE'
    });
    
    if (response.ok) {
      carregarDados();
      alert('Categoria excluída com sucesso!');
    } else {
      const error = await response.json();
      throw new Error(error.error || 'Erro ao excluir categoria');
    }
  } catch (error) {
    console.error('Erro:', error);
    alert('Erro ao excluir categoria: ' + error.message);
  }
}

// Fechar modal clicando fora
window.onclick = function(event) {
  const modal = document.getElementById('modal-categoria');
  if (event.target === modal) {
    fecharModalCategoria();
  }
}
</script>

<!-- Script principal -->
<script src="/js/main.js"></script>
</body>
</html>